"""
Generated by <Python Project Utils>
Visit the project in http://code.google.com/p/python-project-utils/
"""

class LazyPropertyDescriptor(property):
	def __init__(self, fload = None, fget = None, fset = None, fdel = None, doc = None):
		property.__init__(self, fget, fset, fdel, doc)

		self.fload = fload

	def __get__(self, object, object_type = None):
		if not getattr(object, "_lazy_" + self.fload.__name__ + "_is_loaded", False):
			self.fload(object)
			setattr(object, "_lazy_" + self.fload.__name__ + "_is_loaded", True)

		return property.__get__(self, object, object_type)

	def __set__(self, object, value):
		setattr(object, "_lazy_" + self.fload.__name__ + "_is_loaded", True)

		property.__set__(self, object, value)

	def __delete__(self, object):
		setattr(object, "_lazy_" + self.fload.__name__ + "_is_loaded", True)

		property.__delete__(self, object)

	def getter(self, fget):
		return type(self)(self.fload, fget, self.fset, self.fdel, self.__doc__)

	def setter(self, fset):
		return type(self)(self.fload, self.fget, fset, self.fdel, self.__doc__)

	def deleter(self, fdel):
		return type(self)(self.fload, self.fget, self.fset, fdel, self.__doc__)

	def loader(self, fload):
		return type(self)(fload, self.fget, self.fset, self.fdel, self.__doc__)
		

def lazy_property(fload = None, fget = None, fset = None, fdel = None, doc = None):
	return LazyPropertyDescriptor(fload, fget, fset, fdel, doc)
