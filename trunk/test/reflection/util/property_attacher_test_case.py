"""
Generated by <Python Project Utils>
Visit the project in http://code.google.com/p/python-project-utils/
"""

import unittest
import utilities.reflection.util

class PropertyAttacherTestCase(unittest.TestCase):
	def test_type_safe_attach_property(self):
		class DummyClass(object):
			pass

		utilities.reflection.util.PropertyAttacher.attach_property(DummyClass, "property", int)
		dummy_object = DummyClass()

		self.assertEqual(dummy_object.property, None)

		success = False

		try:
			dummy_object.property = "some string"
		except TypeError:
			success = True

		self.assertTrue(success)

		dummy_object.property = 5

		self.assertEqual(dummy_object.property, 5)

		del dummy_object.property

		self.assertEqual(dummy_object.property, None)

	def test_non_type_safe_attach_property(self):
		class DummyClass(object):
			pass

		utilities.reflection.util.PropertyAttacher.attach_property(DummyClass, "property")
		dummy_object = DummyClass()

		self.assertEqual(dummy_object.property, None)

		dummy_object.property = 5

		self.assertEqual(dummy_object.property, 5)

		dummy_object.property = "some string"

		self.assertEqual(dummy_object.property, "some string")

	def test_lazy_attach_property(self):
		class DummyClass(object):
			pass

		def lazy_load(self):
			return "lazy loaded!"

		utilities.reflection.util.PropertyAttacher.attach_property(DummyClass, "property", attribute_value_loader=lazy_load)
		dummy_object = DummyClass()

		self.assertEqual(dummy_object.property, "lazy loaded!")
