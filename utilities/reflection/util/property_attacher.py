"""
Generated by <Python Project Utils>
Visit the project in http://code.google.com/p/python-project-utils/
"""

#from ... import decorator

class PropertyAttacher:
	@staticmethod
	def attach_property(cls, property_name, property_type = None, loader = None):
		"""
		Attaches a new property, named <property_name>, to the class <cls>
		"""
		attribute = "_" + property_name

		def getter(self):
			return getattr(self, attribute, None)

		def setter(self, property_value):
			setattr(self, attribute, property_value)

		def type_safe_setter(self, property_value):
			if type(property_value) is not property_type:
				raise TypeError("Wrong value type for {0}. Expected {1}, got {2}.".format(property_name, property_type, type(property_value)))

			setattr(self, attribute, property_value)

		def deleter(self):
			delattr(self, attribute)

		getter.__name__ = property_name
		setter.__name__ = property_name
		type_safe_setter.__name__ = property_name
		deleter.__name__ = property_name

		if loader is None:
			setattr(cls, property_name, property(getter, setter if property_type is None else type_safe_setter, deleter))
		else:
			loader.__name__ = property_name
			#setattr(cls, decorator.property_name, lazy_property(loader, getter, setter if property_type is None else type_safe_setter, deleter))
